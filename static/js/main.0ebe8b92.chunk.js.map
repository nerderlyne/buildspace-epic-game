{"version":3,"sources":["assets/twitter-logo.svg","assets/cat-water.gif","constants.js","components/loading-indicator/index.js","components/select-character/SelectCharacter.js","components/arena/index.js","App.js","index.js"],"names":["CONTRACT_ADDRESS","TWITTER_HANDLE","TWITTER_LINK","transformCharacterData","characterData","name","imageURI","hp","toNumber","maxHp","attackDamage","LoadingIndicator","className","SelectCharacter","setCharacterNFT","useState","characters","setCharacters","gameContract","setGameContract","mintingCharacter","setMintingCharacter","mintCharacterNFTAction","characterId","a","console","log","mintCharacterNFT","mintTxn","wait","warn","useEffect","ethereum","window","signer","ethers","providers","Web3Provider","getSigner","Contract","myEpicGame","abi","getCharacters","getDefaultCharacters","charactersTxn","map","onCharacterMint","sender","tokenId","characterIndex","checkUserNFT","characterNFT","on","off","length","character","index","src","alt","type","onClick","Arena","boss","setBoss","attackState","setAttackState","showToast","setShowToast","runAttackAction","attackBoss","attackTxn","setTimeout","error","fetchBoss","getBigBoss","bossTxn","id","value","max","App","currentAccount","setCurrentAccount","isLoading","setIsLoading","checkWalletConnected","request","method","accounts","account","connectWallet","alert","fetchNftMetadata","provider","txn","curiousCat","twitterLogo","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ebe8b92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter-logo.a8a75254.svg\";","export default __webpack_public_path__ + \"static/media/cat-water.694295d2.gif\";","const CONTRACT_ADDRESS = \"0xc01180dd8B70978C4f11Cb17Cac4D300bf54120e\";\nconst TWITTER_HANDLE = \"nerderlyne\";\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst transformCharacterData = (characterData) => {\n  return {\n    name: characterData.name,\n    imageURI: characterData.imageURI,\n    hp: characterData.hp.toNumber(),\n    maxHp: characterData.maxHp.toNumber(),\n    attackDamage: characterData.attackDamage.toNumber(),\n  };\n};\n\nexport {\n  CONTRACT_ADDRESS,\n  TWITTER_HANDLE,\n  TWITTER_LINK,\n  transformCharacterData,\n};\n","import React from \"react\";\nimport \"./LoadingIndicator.css\";\n\nconst LoadingIndicator = () => {\n  return (\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default LoadingIndicator;\n","import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./SelectCharacter.css\";\nimport LoadingIndicator from \"../loading-indicator/index\";\n\nexport default function SelectCharacter({ setCharacterNFT }) {\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null);\n  const [mintingCharacter, setMintingCharacter] = useState(null);\n\n  const renderCharacters = () =>\n    characters.map((character, index) => (\n      <div className=\"character-item\" key={character.name}>\n        <div className=\"name-container\">\n          <p>{character.name}</p>\n        </div>\n        <img src={character.imageURI} alt={character.name} />\n        <button\n          type=\"button\"\n          className=\"character-mint-button\"\n          onClick={mintCharacterNFTAction(index)}\n        >{`Mint ${character.name}`}</button>\n      </div>\n    ));\n\n  const mintCharacterNFTAction = (characterId) => async () => {\n    try {\n      if (gameContract) {\n        setMintingCharacter(true);\n        console.log(\"Minting character in progress...\");\n        const mintTxn = await gameContract.mintCharacterNFT(characterId);\n        await mintTxn.wait();\n        console.log(\"mintTxn: \", mintTxn);\n        setMintingCharacter(false);\n      }\n    } catch (error) {\n      console.warn(\"MintCharacterAction Error: \", error);\n      setMintingCharacter(false);\n    }\n  };\n\n  useEffect(() => {\n    const { ethereum } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        console.log(\"Getting contract characters to mint\");\n\n        const charactersTxn = await gameContract.getDefaultCharacters();\n        console.log(\"charactersTxn: \", charactersTxn);\n\n        const characters = charactersTxn.map((characterData) =>\n          transformCharacterData(characterData)\n        );\n\n        setCharacters(characters);\n      } catch (error) {\n        console.log(\"Something went wrong when fetching characters:\", error);\n      }\n    };\n\n    const onCharacterMint = async (sender, tokenId, characterIndex) => {\n      console.log(\n        `CharacterNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} characterIndex: ${characterIndex.toNumber()}`\n      );\n\n      if (gameContract) {\n        const characterNFT = await gameContract.checkUserNFT();\n        console.log(\"CharacterNFT: \", characterNFT);\n        setCharacterNFT(transformCharacterData(characterNFT));\n      }\n    };\n\n    if (gameContract) {\n      getCharacters();\n      gameContract.on(\"CharacterNftMinted\", onCharacterMint);\n    }\n\n    return () => {\n      if (gameContract) {\n        gameContract.off(\"CharacterNftMinted\", onCharacterMint);\n      }\n    };\n  }, [gameContract]);\n\n  return (\n    <div className=\"select-character-container\">\n      <h2>Mint your Cat companion!</h2>\n      {characters.length > 0 && (\n        <div className=\"character-grid\">{renderCharacters()}</div>\n      )}\n      {mintingCharacter && (\n        <div className=\"loading\">\n          <div className=\"indicator\">\n            <LoadingIndicator />\n            <p>Minting In Progress...</p>\n          </div>\n          <img\n            src=\"https://media2.giphy.com/media/61tYloUgq1eOk/giphy.gif?cid=ecf05e47dg95zbpabxhmhaksvoy8h526f96k4em0ndvx078s&rid=giphy.gif&ct=g\"\n            alt=\"Minting loading indicator\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\nimport LoadingIndicator from \"../loading-indicator\";\n\nexport default function Arena({ characterNFT, setCharacterNFT }) {\n  // State\n  const [gameContract, setGameContract] = useState(null);\n  const [boss, setBoss] = useState(null);\n  const [attackState, setAttackState] = useState(\"\");\n  const [showToast, setShowToast] = useState(\"\");\n\n  const runAttackAction = async () => {\n    try {\n      if (gameContract) {\n        setAttackState(\"attacking\");\n        console.log(\"Attacking boss...\");\n        const attackTxn = await gameContract.attackBoss();\n        await attackTxn.wait();\n        console.log(\"attackTxn: \", attackTxn);\n        setAttackState(\"hit\");\n\n        setShowToast(true);\n        setTimeout(() => {\n          setShowToast(false);\n        }, 5000);\n      }\n    } catch (error) {\n      console.error(\"Error attacking boss: \", error);\n      setAttackState(\"\");\n    }\n  };\n  // UseEffects\n  useEffect(() => {\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Box: \", bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n    const onAttackComplete = (newBossHp, newPlayerHp) => {\n      const bossHp = newBossHp.toNumber();\n      const playerHp = newPlayerHp.toNumber();\n\n      console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`);\n\n      setBoss((prevState) => {\n        return { ...prevState, hp: bossHp };\n      });\n\n      setCharacterNFT((prevState) => {\n        return { ...prevState, hp: playerHp };\n      });\n    };\n    if (gameContract) {\n      fetchBoss();\n    }\n  }, [gameContract]);\n\n  useEffect(() => {\n    const { ethereum } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n\n  return (\n    <div className=\"arena-container\">\n      {boss && characterNFT && (\n        <div id=\"toast\" className={showToast ? \"show\" : \"\"}>\n          <div id=\"desc\">{`💥 ${boss.name} was hit for ${characterNFT.attackDamage}!`}</div>\n        </div>\n      )}\n      {boss && (\n        <div className=\"boss-container\">\n          <div className={`boss-content ${attackState}`}>\n            <h2>🔥 {boss.name} 🔥</h2>\n            <div className=\"image-content\">\n              <img src={boss.imageURI} alt={`Boss ${boss.name}`} />\n              <div className=\"health-bar\">\n                <progress value={boss.hp} max={boss.maxHp} />\n                <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"attack-container\">\n            <button className=\"cta-button\" onClick={runAttackAction}>\n              {`💥 Attack ${boss.name}`}\n            </button>\n          </div>\n          {attackState === \"attacking\" && (\n            <div className=\"loading-indicator\">\n              <LoadingIndicator />\n              <p>Attacking ⚔️</p>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Character NFT */}\n      {characterNFT && (\n        <div className=\"players-container\">\n          <div className=\"player-container\">\n            <h2>Your Character</h2>\n            <div className=\"player\">\n              <div className=\"image-content\">\n                <h2>{characterNFT.name}</h2>\n                <img\n                  src={characterNFT.imageURI}\n                  alt={`Character ${characterNFT.name}`}\n                />\n                <div className=\"health-bar\">\n                  <progress value={characterNFT.hp} max={characterNFT.maxHp} />\n                  <p>{`${characterNFT.hp} / ${characterNFT.maxHp} HP`}</p>\n                </div>\n              </div>\n              <div className=\"stats\">\n                <h4>{`⚔️ Attack Damage: ${characterNFT.attackDamage}`}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport curiousCat from \"./assets/cat-water.gif\";\nimport \"./App.css\";\nimport SelectCharacter from \"./components/select-character/SelectCharacter\";\nimport Arena from \"./components/arena/index\";\nimport LoadingIndicator from \"./components/loading-indicator/index\";\n\nimport {\n  CONTRACT_ADDRESS,\n  transformCharacterData,\n  TWITTER_HANDLE,\n  TWITTER_LINK,\n} from \"./constants\";\nimport myEpicGame from \"./utils/MyEpicGame.json\";\n\nexport default function App() {\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [characterNFT, setCharacterNFT] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const checkWalletConnected = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        console.log(\"Make sure you have MetaMask!\");\n        return;\n      } else {\n        console.log(\"We have the ethereum object\", ethereum);\n\n        const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          console.log(\"Found an authorised account: \", account);\n          setCurrentAccount(account);\n        } else {\n          console.log(\"No authorised account found\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    setIsLoading(false);\n  };\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const renderContent = () => {\n    if (isLoading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!currentAccount) {\n      return (\n        <div className=\"connect-wallet-container\">\n          <img src={curiousCat} alt=\"Curious cat jumping in water\" />\n          <button\n            className=\"cta-button connect-wallet-button\"\n            onClick={connectWallet}\n          >\n            Connect Wallet to Play!\n          </button>\n        </div>\n      );\n    } else if (currentAccount && !characterNFT) {\n      return <SelectCharacter setCharacterNFT={setCharacterNFT} />;\n    } else if (currentAccount && characterNFT) {\n      return (\n        <Arena characterNFT={characterNFT} setCharacterNFT={setCharacterNFT} />\n      );\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    checkWalletConnected();\n  }, []);\n\n  useEffect(() => {\n    const fetchNftMetadata = async () => {\n      console.log(\"Checking for Character NFT on address: \", currentAccount);\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n\n      const txn = await gameContract.checkUserNFT();\n      if (txn.name) {\n        console.log(\"User has character NFT\");\n        setCharacterNFT(transformCharacterData(txn));\n      } else {\n        console.log(\"No character NFT found\");\n      }\n\n      setIsLoading(false);\n    };\n\n    if (currentAccount) {\n      console.log(\"Current Account: \", currentAccount);\n      fetchNftMetadata();\n    }\n  }, [currentAccount]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header gradient-text\">⚔️ Cataverse 13 ⚔️</p>\n          <p className=\"sub-text\">Help Kitty defeat the bath water!</p>\n          {renderContent()}\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built by @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}